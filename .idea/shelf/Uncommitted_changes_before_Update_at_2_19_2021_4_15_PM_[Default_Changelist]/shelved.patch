Index: app/src/main/java/com/digidoctor/android/view/fragments/digiDoctorFragments/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.view.fragments.digiDoctorFragments;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.DatePicker;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.databinding.FragmentProfileBinding;\r\nimport com.digidoctor.android.databinding.GenderViewBinding;\r\nimport com.digidoctor.android.interfaces.ApiCallbackInterface;\r\nimport com.digidoctor.android.interfaces.MyDialogInterface;\r\nimport com.digidoctor.android.model.Registration;\r\nimport com.digidoctor.android.model.User;\r\nimport com.digidoctor.android.utility.ApiUtils;\r\nimport com.digidoctor.android.utility.AppUtils;\r\nimport com.digidoctor.android.utility.FileUtil;\r\nimport com.digidoctor.android.utility.utils;\r\nimport com.digidoctor.android.view.activity.PatientDashboard;\r\nimport com.github.dhaval2404.imagepicker.ImagePicker;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport static com.digidoctor.android.utility.ApiUtils.patientRegistration;\r\nimport static com.digidoctor.android.utility.AppUtils.isEmailValid;\r\nimport static com.digidoctor.android.utility.utils.BOOKING_USER;\r\nimport static com.digidoctor.android.utility.utils.MOBILE_NUMBER;\r\nimport static com.digidoctor.android.utility.utils.TOKEN;\r\nimport static com.digidoctor.android.utility.utils.USER;\r\nimport static com.digidoctor.android.utility.utils.USER_MAIN;\r\nimport static com.digidoctor.android.utility.utils.getPrimaryUser;\r\nimport static com.digidoctor.android.utility.utils.hideSoftKeyboard;\r\nimport static com.digidoctor.android.utility.utils.logout;\r\n\r\n\r\npublic class ProfileFragment extends Fragment implements MyDialogInterface {\r\n\r\n\r\n    FragmentProfileBinding profileBinding;\r\n    String name, email, dob, address, gender, mobile;\r\n\r\n    User user;\r\n    String GENDER = null;\r\n    AlertDialog optionDialog;\r\n\r\n\r\n    Registration registration = new Registration();\r\n    private static final String TAG = \"ProfileFragment\";\r\n\r\n    String memberId = null;\r\n\r\n    boolean isPicChange = false;\r\n\r\n    String imagePath = null;\r\n\r\n    @Override\r\n    public View onCreateView(@NotNull LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        profileBinding = FragmentProfileBinding.inflate(inflater, container, false);\r\n        profileBinding.setDialogInterface(this);\r\n        return profileBinding.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        Objects.requireNonNull(((AppCompatActivity) requireActivity()).getSupportActionBar()).show();\r\n        user = getPrimaryUser(requireActivity());\r\n\r\n        memberId = String.valueOf(user.getMemberId());\r\n\r\n        Log.d(TAG, \"memberIdReceived: \" + memberId);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        user = getPrimaryUser(requireActivity());\r\n        Log.d(TAG, \"onViewCreatedUser: \" + user.getPrimaryStatus());\r\n\r\n        updateVisibility(user);\r\n\r\n        if (user.getIsExists() == 1) {\r\n\r\n            profileBinding.setUser(user);\r\n            if (null != user && null != user.getPrimaryStatus())\r\n                profileBinding.editTextTextPersonNumber.setEnabled(user.getPrimaryStatus() != 1);\r\n\r\n        }\r\n\r\n        profileBinding.setMobile(utils.getString(utils.MOBILE_NUMBER, requireActivity()));\r\n\r\n        profileBinding.btnUpdateProfile.setOnClickListener(view12 -> {\r\n            if (user.getIsExists() == 0) {\r\n                if (isAllFieldFilled()) {\r\n                    registerUser();\r\n                }\r\n\r\n            } else {\r\n                if (checkFieldsForUpdateProfile()) {\r\n                    updateProfile();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        profileBinding.textView5.setOnClickListener(view1 -> ImagePicker.Companion.with(this)\r\n                .crop(4f, 4f)                    //Crop image(Optional), Check Customization for more option\r\n                .compress(512)            //Final image size will be less than 1 MB(Optional)\r\n                .maxResultSize(1080, 1080)    //Final image resolution will be less than 1080 x 1080(Optional)\r\n                .start());\r\n\r\n\r\n    }\r\n\r\n    private boolean checkFieldsForUpdateProfile() {\r\n\r\n        name = profileBinding.editTextTextPersonName.getText().toString().trim();\r\n        email = profileBinding.editTextTextPersonEmail.getText().toString().trim();\r\n        dob = AppUtils.parseUserDate(profileBinding.editTextTextPersonDob.getText().toString().trim());\r\n        gender = profileBinding.editTextTextPersonGender.getText().toString().trim();\r\n        address = profileBinding.editTextTextPersonAddress.getText().toString().trim();\r\n        mobile = profileBinding.editTextTextPersonNumber.getText().toString().trim();\r\n\r\n        if (TextUtils.isEmpty(name)) {\r\n            Toast.makeText(requireActivity(), R.string.name_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(email)) {\r\n            Toast.makeText(requireActivity(), R.string.email_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (!isEmailValid(email.trim())) {\r\n            Toast.makeText(requireActivity(), R.string.enter_valid_email_id, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(mobile)) {\r\n            Toast.makeText(requireActivity(), R.string.mobile_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (mobile.length() < 10) {\r\n            Toast.makeText(requireActivity(), R.string.enter_valid_mobile_number, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(address)) {\r\n            Toast.makeText(requireActivity(), R.string.address_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == Activity.RESULT_OK) {\r\n            if (null != data) {\r\n                try {\r\n                    Uri uri = data.getData();\r\n                    profileBinding.profileImage.setImageURI(uri);\r\n                    isPicChange = true;\r\n                    File file = FileUtil.from(requireActivity(), uri);\r\n                    uploadImage(file);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void uploadImage(File imagFile) throws IOException {\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        ApiUtils.uploadProfileImage(imagFile, new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> o) {\r\n                AppUtils.hideDialog();\r\n                List<String> Path = (List<String>) o;\r\n                Log.d(TAG, \"ImagePath: \" + Path.get(0));\r\n                imagePath = Path.get(0);\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), s, Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), throwable.getLocalizedMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateVisibility(User user) {\r\n        profileBinding.ivDobDialog.setVisibility(user.getIsExists() == 0 ? View.VISIBLE : View.GONE);\r\n        profileBinding.ivGenderDialog.setVisibility(user.getIsExists() == 0 ? View.VISIBLE : View.GONE);\r\n    }\r\n\r\n    private void updateProfile() {\r\n\r\n        User updatedUser = new User();\r\n        updatedUser.setMemberId(user.getId());\r\n        updatedUser.setName(profileBinding.editTextTextPersonName.getText().toString());\r\n        updatedUser.setMobileNo(profileBinding.editTextTextPersonNumber.getText().toString());\r\n        updatedUser.setEmailId(profileBinding.editTextTextPersonEmail.getText().toString());\r\n        updatedUser.setGender(profileBinding.editTextTextPersonGender.getText().toString().equalsIgnoreCase(\"male\") ? 1 : 2);\r\n        updatedUser.setDob(AppUtils.parseUserDate(profileBinding.editTextTextPersonDob.getText().toString()));\r\n        updatedUser.setAddress(profileBinding.editTextTextPersonAddress.getText().toString());\r\n\r\n        updatedUser.setProfilePhotoPath(imagePath);\r\n\r\n\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        ApiUtils.updateMember(updatedUser, new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> o) {\r\n\r\n                List<User> updatedUsers = (List<User>) o;\r\n                for (User user : updatedUsers) {\r\n\r\n                    Log.d(TAG, \"memberIdReceived: \" + memberId);\r\n                    if (user.getMemberId() == Integer.parseInt(memberId)) {\r\n                        utils.savePrimaryUserData(USER, requireActivity(), user);\r\n\r\n                        utils.setUserForBooking(BOOKING_USER, requireActivity(), user);\r\n\r\n                        utils.setString(MOBILE_NUMBER, user.getMobileNo(), requireActivity());\r\n\r\n                        PatientDashboard.getInstance().updateUser();\r\n                    }\r\n                    if (user.getPrimaryStatus() == 1) {\r\n                        utils.saveMainUserData(USER_MAIN, requireActivity(), user);\r\n                    }\r\n                }\r\n                Toast.makeText(requireActivity(), \"Updated Successfully\", Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n                PatientDashboard.getInstance().updateUser();\r\n                PatientDashboard.getInstance().onSupportNavigateUp();\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                Toast.makeText(requireActivity(), getString(R.string.retry), Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                Toast.makeText(requireActivity(), getString(R.string.retry), Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void registerUser() {\r\n\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        registration.setProfilePhotoPath(imagePath);\r\n        patientRegistration(registration, requireActivity(), new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> obj) {\r\n                hideSoftKeyboard(requireActivity());\r\n                Toast.makeText(requireActivity(), R.string.profile_saved, Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n                try {\r\n                    List<User> users = (List<User>) obj;\r\n\r\n                    user = users.get(0);\r\n\r\n                    profileBinding.setUser(user);\r\n\r\n\r\n                    PatientDashboard.getInstance().setUser(user);\r\n\r\n                    //setting primary user info\r\n                    utils.savePrimaryUserData(USER, requireActivity(), user);\r\n\r\n                    //setting user info for Booking Appointment\r\n                    utils.setUserForBooking(BOOKING_USER, requireActivity(), user);\r\n\r\n                    utils.setString(MOBILE_NUMBER, mobile, requireActivity());\r\n\r\n                    PatientDashboard.getInstance().updateUser();\r\n                    PatientDashboard.getInstance().onSupportNavigateUp();\r\n\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                    Log.d(TAG, \"onFailure: \" + e.getLocalizedMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), R.string.retry, Toast.LENGTH_SHORT).show();\r\n                try {\r\n                    if (s.equalsIgnoreCase(\"Failed to authenticate token !!\")) {\r\n                        logout(PatientDashboard.getInstance(), true);\r\n                        Toast.makeText(PatientDashboard.getInstance(), s, Toast.LENGTH_SHORT).show();\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), R.string.retry, Toast.LENGTH_SHORT).show();\r\n                Log.d(TAG, \"onFailed: \" + throwable.getLocalizedMessage());\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean isAllFieldFilled() {\r\n\r\n        name = profileBinding.editTextTextPersonName.getText().toString().trim();\r\n        email = profileBinding.editTextTextPersonEmail.getText().toString().trim();\r\n        dob = AppUtils.parseUserDate(profileBinding.editTextTextPersonDob.getText().toString().trim());\r\n        gender = profileBinding.editTextTextPersonGender.getText().toString().trim();\r\n        address = profileBinding.editTextTextPersonAddress.getText().toString().trim();\r\n        mobile = profileBinding.editTextTextPersonNumber.getText().toString().trim();\r\n\r\n        if (TextUtils.isEmpty(name)) {\r\n            Toast.makeText(requireActivity(), R.string.name_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(email)) {\r\n            Toast.makeText(requireActivity(), R.string.email_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (!isEmailValid(email.trim())) {\r\n            Toast.makeText(requireActivity(), R.string.enter_valid_email_id, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(dob)) {\r\n            Toast.makeText(requireActivity(), R.string.date_of_birth_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (null == GENDER) {\r\n            Toast.makeText(requireActivity(), R.string.select_gender, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(address)) {\r\n            Toast.makeText(requireActivity(), R.string.address_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(mobile)) {\r\n            Toast.makeText(requireActivity(), R.string.mobilel_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else {\r\n            registration.setName(name);\r\n            registration.setEmailId(email);\r\n            registration.setDob(dob);\r\n            registration.setGender(Long.parseLong(GENDER));\r\n            registration.setAddress(address);\r\n            registration.setMobileNo(mobile);\r\n            registration.setDeviceToken(utils.getString(TOKEN, requireActivity()));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onGenderItemClick() {\r\n        showSelectGenderDialog();\r\n    }\r\n\r\n    private void showSelectGenderDialog() {\r\n        LayoutInflater inflater = (LayoutInflater) requireActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View formElementsView = inflater.inflate(R.layout.gender_view, null, false);\r\n\r\n        GenderViewBinding genderViewBinding = GenderViewBinding.bind(formElementsView);\r\n\r\n\r\n        genderViewBinding.llMale.setOnClickListener(view -> {\r\n            GENDER = \"1\";\r\n            profileBinding.editTextTextPersonGender.setText(R.string.male);\r\n            optionDialog.dismiss();\r\n        });\r\n\r\n        genderViewBinding.llFemale.setOnClickListener(view -> {\r\n            GENDER = \"2\";\r\n            profileBinding.editTextTextPersonGender.setText(R.string.female);\r\n            optionDialog.dismiss();\r\n\r\n        });\r\n\r\n        // the alert dialog\r\n        optionDialog = new AlertDialog.Builder(requireActivity()).create();\r\n        optionDialog.setView(formElementsView);\r\n        optionDialog.show();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onAgeItemClick() {\r\n        showSelectAgeDialog();\r\n    }\r\n\r\n    private void showSelectAgeDialog() {\r\n        LayoutInflater inflater = (LayoutInflater) requireActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        View view = inflater.inflate(R.layout.date_picker, null, false);\r\n        final DatePicker myDatePicker = (DatePicker) view.findViewById(R.id.myDatePicker);\r\n\r\n        myDatePicker.setCalendarViewShown(false);\r\n        myDatePicker.setMaxDate(System.currentTimeMillis());\r\n        new AlertDialog.Builder(requireActivity()).setView(view)\r\n                .setTitle(R.string.set_date)\r\n                .setPositiveButton(R.string.ok, (dialog, id) -> {\r\n                    int month = myDatePicker.getMonth() + 1;\r\n                    int day = myDatePicker.getDayOfMonth();\r\n                    int year = myDatePicker.getYear();\r\n                    profileBinding.editTextTextPersonDob.setText(day + \"/\" + month + \"/\" + year);\r\n                    dialog.cancel();\r\n                }).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/view/fragments/digiDoctorFragments/ProfileFragment.java	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ app/src/main/java/com/digidoctor/android/view/fragments/digiDoctorFragments/ProfileFragment.java	(date 1613636467597)
@@ -47,6 +47,7 @@
 import static com.digidoctor.android.utility.utils.TOKEN;
 import static com.digidoctor.android.utility.utils.USER;
 import static com.digidoctor.android.utility.utils.USER_MAIN;
+import static com.digidoctor.android.utility.utils.fcmToken;
 import static com.digidoctor.android.utility.utils.getPrimaryUser;
 import static com.digidoctor.android.utility.utils.hideSoftKeyboard;
 import static com.digidoctor.android.utility.utils.logout;
@@ -186,9 +187,9 @@
 
     }
 
-    private void uploadImage(File imagFile) throws IOException {
+    private void uploadImage(File imageFile) throws IOException {
         AppUtils.showRequestDialog(requireActivity());
-        ApiUtils.uploadProfileImage(imagFile, new ApiCallbackInterface() {
+        ApiUtils.uploadProfileImage(imageFile, new ApiCallbackInterface() {
             @Override
             public void onSuccess(List<?> o) {
                 AppUtils.hideDialog();
@@ -345,7 +346,6 @@
         gender = profileBinding.editTextTextPersonGender.getText().toString().trim();
         address = profileBinding.editTextTextPersonAddress.getText().toString().trim();
         mobile = profileBinding.editTextTextPersonNumber.getText().toString().trim();
-
         if (TextUtils.isEmpty(name)) {
             Toast.makeText(requireActivity(), R.string.name_required, Toast.LENGTH_SHORT).show();
             return false;
@@ -374,7 +374,7 @@
             registration.setGender(Long.parseLong(GENDER));
             registration.setAddress(address);
             registration.setMobileNo(mobile);
-            registration.setDeviceToken(utils.getString(TOKEN, requireActivity()));
+            registration.setDeviceToken(utils.getString(fcmToken, requireActivity()));
             return true;
         }
     }
Index: app/src/main/java/com/digidoctor/android/view/activity/PatientDashboard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.view.activity;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.ResultReceiver;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.WebView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.NavigationUI;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.adapters.NavAdapter;\r\nimport com.digidoctor.android.databinding.ActivityDashBoardBinding;\r\nimport com.digidoctor.android.interfaces.ApiCallbackInterface;\r\nimport com.digidoctor.android.interfaces.NavigationInterface;\r\nimport com.digidoctor.android.model.NavModel;\r\nimport com.digidoctor.android.model.User;\r\nimport com.digidoctor.android.model.pharmacyModel.CartCount;\r\nimport com.digidoctor.android.utility.ApiUtils;\r\nimport com.digidoctor.android.utility.GetAddressIntentService;\r\nimport com.digidoctor.android.utility.utils;\r\nimport com.digidoctor.android.view.fragments.digiDoctorFragments.SearchBluetoothDeviceFragment;\r\nimport com.digidoctor.android.viewHolder.PatientViewModel;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationCallback;\r\nimport com.google.android.gms.location.LocationRequest;\r\nimport com.google.android.gms.location.LocationResult;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.grisoftware.updatechecker.GoogleChecker;\r\nimport com.payu.base.models.ErrorResponse;\r\nimport com.payu.checkoutpro.utils.PayUCheckoutProConstants;\r\nimport com.payu.ui.model.listeners.PayUCheckoutProListener;\r\nimport com.razorpay.PaymentData;\r\nimport com.razorpay.PaymentResultWithDataListener;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.jetbrains.annotations.Nullable;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport static com.digidoctor.android.utility.AppUtils.getNavData;\r\nimport static com.digidoctor.android.utility.AppUtils.hideDialog;\r\nimport static com.digidoctor.android.utility.AppUtils.shareApp;\r\nimport static com.digidoctor.android.utility.AppUtils.showRequestDialog;\r\nimport static com.digidoctor.android.utility.utils.getPrimaryUser;\r\nimport static com.digidoctor.android.view.fragments.digiDoctorFragments.BookAppointmentFragment.bookAppointment;\r\nimport static com.digidoctor.android.view.fragments.digiDoctorFragments.PatientDashboardFragment.dashboard2Binding;\r\nimport static com.digidoctor.android.view.fragments.digiDoctorFragments.SearchBluetoothDeviceFragment.REQUEST_ENABLE_BT;\r\n\r\npublic class PatientDashboard extends AppCompatActivity implements PaymentResultWithDataListener, NavigationInterface, PayUCheckoutProListener {\r\n\r\n\r\n    private static final int LOCATION_PERMISSION_REQUEST_CODE = 101;\r\n    ActivityDashBoardBinding mainBinding;\r\n\r\n    NavController navController;\r\n\r\n    User user;\r\n    String lat, lng;\r\n\r\n\r\n    private static final String TAG = \"PatientDashboard\";\r\n\r\n\r\n    public static PatientDashboard instance;\r\n\r\n\r\n    public static PatientDashboard getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    public String cityName;\r\n    public String areaName;\r\n\r\n    NavAdapter navAdapter;\r\n    List<NavModel> navModels;\r\n\r\n    MenuItem cartItem = null;\r\n    MenuItem favouriteItem = null;\r\n    MenuItem searchItem = null;\r\n\r\n    int cartCounter = 0;\r\n    int favouriteCounter = 0;\r\n    TextView cartTv, favouriteTv;\r\n\r\n    PatientViewModel viewModel;\r\n\r\n    public String getCityName() {\r\n        if (cityName == null)\r\n            return \"\";\r\n        else return cityName;\r\n    }\r\n\r\n    public void setCityName(String cityName) {\r\n        this.cityName = cityName;\r\n    }\r\n\r\n    public String getAreaName() {\r\n        if (areaName == null)\r\n            return \"\";\r\n        else return areaName;\r\n    }\r\n\r\n    public void setAreaName(String areaName) {\r\n        this.areaName = areaName;\r\n    }\r\n\r\n    private FusedLocationProviderClient fusedLocationClient;\r\n    private LocationAddressResultReceiver addressResultReceiver;\r\n    private Location currentLocation;\r\n    private LocationCallback locationCallback;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        mainBinding = DataBindingUtil.setContentView(this, R.layout.activity_dash_board);\r\n\r\n        instance = this;\r\n\r\n        user = getPrimaryUser(getInstance());\r\n\r\n        navController = Navigation.findNavController(this, R.id.nav_host_fragment);\r\n\r\n        NavigationUI.setupActionBarWithNavController(this, navController);\r\n\r\n\r\n        Objects.requireNonNull(getSupportActionBar()).hide();\r\n\r\n        addressResultReceiver = new LocationAddressResultReceiver(new Handler());\r\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\r\n        locationCallback = new LocationCallback() {\r\n            @Override\r\n            public void onLocationResult(LocationResult locationResult) {\r\n                currentLocation = locationResult.getLocations().get(0);\r\n                getAddress();\r\n            }\r\n        };\r\n        startLocationUpdates();\r\n\r\n        setNavRec();\r\n\r\n        viewModel = new ViewModelProvider(this).get(PatientViewModel.class);\r\n\r\n        ApiUtils.getcartcountutils(this, new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> o) {\r\n                List<CartCount.CartcountList> CartcountList = (List<CartCount.CartcountList>) o;\r\n                if (null == CartcountList)\r\n                    return;\r\n                if (CartcountList.isEmpty())\r\n                    return;\r\n\r\n                Log.d(TAG, \"onSuccess: \" + CartcountList.get(0).getCartCount());\r\n                cartCounter = CartcountList.get(0).getCartCount();\r\n                updateCartCount(cartCounter);\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n\r\n            }\r\n        });\r\n\r\n        navController.addOnDestinationChangedListener((controller, destination, arguments) -> {\r\n            if (null != searchItem)\r\n                searchItem.setVisible(destination.getId() == R.id.onlinePharmacyFragment);\r\n            if (null != cartItem)\r\n                cartItem.setVisible(destination.getId() != R.id.cart_Details_Fragment);\r\n        });\r\n    }\r\n\r\n\r\n    public void updateUser() {\r\n        user = getPrimaryUser(this);\r\n        mainBinding.setUser(user);\r\n    }\r\n\r\n    private void setNavRec() {\r\n        mainBinding.imageView6.setVisibility(user.getIsExists() == 0 ? View.GONE : View.VISIBLE);\r\n        mainBinding.setUser(getPrimaryUser(this));\r\n        navModels = new ArrayList<>();\r\n        navAdapter = new NavAdapter(navModels, PatientDashboard.this);\r\n        mainBinding.navRec.setAdapter(navAdapter);\r\n        navModels.addAll(getNavData(PatientDashboard.this));\r\n        navAdapter.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        mainBinding.textView14.setOnClickListener(view -> {\r\n                    navController.navigate(R.id.profileFragment);\r\n                    closeDrawer();\r\n                }\r\n        );\r\n\r\n        mainBinding.changeMemberLay.setOnClickListener(view -> {\r\n            closeDrawer();\r\n            if (user.getIsExists() == 1) {\r\n                Bundle mBundle = new Bundle();\r\n                mBundle.putString(\"FROM\", \"DashboardFragment\");\r\n                navController.navigate(R.id.showMemberListFragment, mBundle);\r\n            } else {\r\n                navController.navigate(R.id.profileFragment);\r\n            }\r\n        });\r\n\r\n        checkForUpdate();\r\n    }\r\n\r\n    private void checkForUpdate() {\r\n        new GoogleChecker(\"com.digidoctor.android\", PatientDashboard.this, true, \"en\");\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.main_menu, menu);\r\n\r\n        cartItem = menu.findItem(R.id.cart_Details_Fragment);\r\n        favouriteItem = menu.findItem(R.id.fragmentAllWishLIstProduct);\r\n        searchItem = menu.findItem(R.id.allProductsFragment);\r\n\r\n        View actionView = cartItem.getActionView();\r\n        View actionView2 = favouriteItem.getActionView();\r\n\r\n        cartTv = actionView.findViewById(R.id.tvCartCount);\r\n        favouriteTv = actionView2.findViewById(R.id.tvFavouriteCount);\r\n\r\n        cartTv.setText(String.valueOf(cartCounter));\r\n        favouriteTv.setText(String.valueOf(favouriteCounter));\r\n\r\n        actionView.setOnClickListener(v -> onOptionsItemSelected(cartItem));\r\n        actionView2.setOnClickListener(v -> onOptionsItemSelected(favouriteItem));\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        return NavigationUI.onNavDestinationSelected(item, navController) || super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @Override\r\n    public boolean onSupportNavigateUp() {\r\n        try {\r\n            utils.hideSoftKeyboard(PatientDashboard.this);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return navController.navigateUp();\r\n    }\r\n\r\n    public View getView() {\r\n        return mainBinding.getRoot();\r\n    }\r\n\r\n\r\n    public void navigate(int id) {\r\n        navController.navigate(id);\r\n    }\r\n\r\n    public void navigate(int id, Bundle bundle) {\r\n        navController.navigate(id, bundle);\r\n    }\r\n\r\n\r\n    public User getUser() {\r\n        if (user == null)\r\n            user = new User();\r\n        return user;\r\n    }\r\n\r\n    public void setUser(User user) {\r\n        this.user = user;\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentSuccess(String status, PaymentData paymentData) {\r\n        Toast.makeText(this, this.getString(R.string.transaction_successful), Toast.LENGTH_LONG).show();\r\n\r\n        Log.d(TAG, \"onPaymentSuccess: \" + status);\r\n\r\n        bookAppointment.startBookingAppointment(paymentData.getPaymentId());\r\n\r\n        Log.d(TAG, \"onPaymentSuccessData: \" + paymentData.getData());\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentError(int i, String s, PaymentData paymentData) {\r\n        Log.d(TAG, \"onPaymentError: \" + s);\r\n        Toast.makeText(instance, R.string.failed_to_book, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n\r\n    @SuppressWarnings(\"MissingPermission\")\r\n    private void startLocationUpdates() {\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) !=\r\n                PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new\r\n                            String[]{Manifest.permission.ACCESS_FINE_LOCATION},\r\n                    LOCATION_PERMISSION_REQUEST_CODE);\r\n        } else {\r\n            LocationRequest locationRequest = new LocationRequest();\r\n            locationRequest.setInterval(10000);\r\n            locationRequest.setFastestInterval(1000);\r\n            locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);\r\n            fusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, null);\r\n        }\r\n    }\r\n\r\n    public String getLat() {\r\n        if (lat == null) return \"\";\r\n        else\r\n            return lat;\r\n    }\r\n\r\n    public void setLat(String lat) {\r\n        this.lat = lat;\r\n    }\r\n\r\n    public String getLng() {\r\n        if (lng == null) return \"\";\r\n        else\r\n            return lng;\r\n    }\r\n\r\n    public void setLng(String lng) {\r\n        this.lng = lng;\r\n    }\r\n\r\n    @SuppressWarnings(\"MissingPermission\")\r\n    private void getAddress() {\r\n        if (!Geocoder.isPresent()) {\r\n            Toast.makeText(PatientDashboard.this, \"Can't find current address, \", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n        Intent intent = new Intent(this, GetAddressIntentService.class);\r\n        intent.putExtra(\"add_receiver\", addressResultReceiver);\r\n        intent.putExtra(\"add_location\", currentLocation);\r\n        startService(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull\r\n            int[] grantResults) {\r\n        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                startLocationUpdates();\r\n            } else {\r\n                Toast.makeText(this, \"Location permission not granted, \" + \"restart the app if you want the feature\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onNavigationItemClicked(int pos) {\r\n        mainBinding.drawerLayout.close();\r\n        switch (pos) {\r\n            case 0:\r\n                if (user.getIsExists() == 1)\r\n                    navController.navigate(R.id.appointmentsFragment);\r\n                else navController.navigate(R.id.profileFragment);\r\n                break;\r\n            case 1:\r\n                if (user.getIsExists() == 1)\r\n                    navController.navigate(R.id.prescriptionHistoryFragment);\r\n                else navController.navigate(R.id.profileFragment);\r\n                break;\r\n\r\n\r\n            case 2:\r\n                if (user.getIsExists() == 1)\r\n                    navController.navigate(R.id.investigationFragment);\r\n                else navController.navigate(R.id.profileFragment);\r\n                break;\r\n\r\n\r\n            case 3:\r\n                if (user.getIsExists() == 1)\r\n                    navController.navigate(R.id.chooseVitalHistoryTypeFragment);\r\n                else navController.navigate(R.id.profileFragment);\r\n                break;\r\n\r\n            case 4:\r\n                if (user.getIsExists() == 1)\r\n                    navController.navigate(R.id.addMemberFragment);\r\n                else navController.navigate(R.id.profileFragment);\r\n                break;\r\n\r\n            case 11:\r\n                navController.navigate(R.id.changeLanguageFragment);\r\n                break;\r\n            case 12:\r\n                shareApp(\"https://digidoctor.in/invitation?invitationCode=\" + getPrimaryUser(PatientDashboard.getInstance()).getMemberId(), \"This is demo description\", this);\r\n                break;\r\n            case 9:\r\n                openBrowser();\r\n                break;\r\n            case 10:\r\n                showRequestDialog(this);\r\n                if (utils.logout(this))\r\n                    hideDialog();\r\n                break;\r\n            default:\r\n                Toast.makeText(instance, \"Coming Soon\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void openBrowser() {\r\n       /* String url = \"http://www.example.com\";\r\n        Intent i = new Intent(Intent.ACTION_VIEW);\r\n        i.setData(Uri.parse(url));\r\n        startActivity(i);*/\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onPaymentSuccess(@NotNull Object o) {\r\n        HashMap<String, Object> result = (HashMap<String, Object>) o;\r\n        String merchantResponse = (String) result.get(PayUCheckoutProConstants.CP_MERCHANT_RESPONSE);\r\n        bookAppointment.startBookingAppointment(merchantResponse);\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentFailure(@NotNull Object response) {\r\n        Toast.makeText(instance, R.string.failed_to_book, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentCancel(boolean b) {\r\n        Log.d(TAG, \"onPaymentCancel: \" + b);\r\n        Toast.makeText(instance, R.string.failed_to_book, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void onError(@NotNull ErrorResponse errorResponse) {\r\n        String errorMessage = errorResponse.getErrorMessage();\r\n        Log.d(TAG, \"onError: \" + errorMessage);\r\n        Toast.makeText(instance, R.string.failed_to_book, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @Override\r\n    public void generateHash(@NotNull HashMap<String, String> hashMap, @NotNull com.payu.ui.model.listeners.PayUHashGenerationListener payUHashGenerationListener) {\r\n        Log.d(TAG, \"generateHash: \");\r\n    }\r\n\r\n    @Override\r\n    public void setWebViewProperties(@Nullable WebView webView, @Nullable Object o) {\r\n\r\n    }\r\n\r\n    private class LocationAddressResultReceiver extends ResultReceiver {\r\n        LocationAddressResultReceiver(Handler handler) {\r\n            super(handler);\r\n        }\r\n\r\n        @Override\r\n        protected void onReceiveResult(int resultCode, Bundle resultData) {\r\n            if (resultCode == 0) {\r\n                Log.d(\"Address\", \"Location null retrying\");\r\n                getAddress();\r\n            }\r\n\r\n            if (resultCode == 1) {\r\n                Toast.makeText(PatientDashboard.this, \"Address not found, \", Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            String currentAdd = resultData.getString(\"address_result\");\r\n            String lat = resultData.getString(\"lat\");\r\n            String lng = resultData.getString(\"lng\");\r\n            showResults(currentAdd, lat, lng);\r\n\r\n        }\r\n    }\r\n\r\n    public void showResults(String currentAdd, String lat, String lng) {\r\n        final String[] address = currentAdd.split(\",\");\r\n\r\n        try {\r\n            dashboard2Binding.tvLocation.setText(address[1]);\r\n            dashboard2Binding.tvCity.setText(address[0]);\r\n\r\n            setLat(lat);\r\n            setLng(lng);\r\n\r\n            setAreaName(address[1]);\r\n            setCityName(address[0]);\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        startLocationUpdates();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        fusedLocationClient.removeLocationUpdates(locationCallback);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_ENABLE_BT) {\r\n            SearchBluetoothDeviceFragment.getInstance().CheckBluetoothState();\r\n        }\r\n    }\r\n\r\n    public void closeDrawer() {\r\n        mainBinding.drawerLayout.close();\r\n    }\r\n\r\n    public void openDrawer() {\r\n        mainBinding.drawerLayout.open();\r\n    }\r\n\r\n    public void updateCartCount(int count) {\r\n        if (null != cartTv) {\r\n            cartTv.setText(String.valueOf(count));\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/view/activity/PatientDashboard.java	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ app/src/main/java/com/digidoctor/android/view/activity/PatientDashboard.java	(date 1613627871349)
@@ -240,7 +240,7 @@
     }
 
 
-    @Override
+/*    @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.main_menu, menu);
 
@@ -261,7 +261,7 @@
         actionView2.setOnClickListener(v -> onOptionsItemSelected(favouriteItem));
 
         return true;
-    }
+    }*/
 
 
     @Override
Index: app/src/main/java/com/digidoctor/android/adapters/DashboardPatientAdapter1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.adapters;\r\n\r\nimport android.app.Activity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.ListAdapter;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.databinding.DashBoardViewBinding;\r\nimport com.digidoctor.android.model.DashboardModel1;\r\nimport com.digidoctor.android.view.activity.PatientDashboard;\r\n\r\n\r\npublic class DashboardPatientAdapter1 extends ListAdapter<DashboardModel1, DashboardPatientAdapter1.DashboardModelVH> {\r\n\r\n    Integer[] images = new Integer[]{\r\n            R.drawable.specialities,\r\n            R.drawable.symptom,\r\n            R.drawable.lab_test,\r\n            R.drawable.pharmacy};\r\n\r\n    Activity activity;\r\n\r\n\r\n    public DashboardPatientAdapter1(Activity activity) {\r\n        super(DashboardModel1.itemCallback);\r\n        this.activity = activity;\r\n\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public DashboardModelVH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        LayoutInflater inflater = LayoutInflater.from(parent.getContext());\r\n        DashBoardViewBinding dashBoardViewBinding = DashBoardViewBinding.inflate(inflater, parent, false);\r\n        return new DashboardModelVH(dashBoardViewBinding);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull DashboardModelVH holder, final int position) {\r\n\r\n        DashboardModel1 dashboardModel1 = getItem(position);\r\n        holder.dashBoardViewBinding.setDashboard1(dashboardModel1);\r\n        holder.dashBoardViewBinding.imageView21.setImageResource(images[position]);\r\n        holder.dashBoardViewBinding.cv1.setOnClickListener(v -> {\r\n            if (position == 0)\r\n                PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_specialitiesFragment2);\r\n            else if (position == 1)\r\n                PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_symptomsFragment2);\r\n            else if (position == 2)\r\n                PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_lab_Home_Fragment);\r\n            else if (position == 3)\r\n                PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_onlinePharmacyFragment);\r\n\r\n        });\r\n\r\n        holder.dashBoardViewBinding.textView55.setText(dashboardModel1.getDescription());\r\n\r\n\r\n    }\r\n\r\n    public class DashboardModelVH extends RecyclerView.ViewHolder {\r\n        DashBoardViewBinding dashBoardViewBinding;\r\n\r\n        public DashboardModelVH(DashBoardViewBinding dashBoardViewBinding) {\r\n            super(dashBoardViewBinding.getRoot());\r\n            this.dashBoardViewBinding = dashBoardViewBinding;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/adapters/DashboardPatientAdapter1.java	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ app/src/main/java/com/digidoctor/android/adapters/DashboardPatientAdapter1.java	(date 1613630327430)
@@ -3,6 +3,7 @@
 import android.app.Activity;
 import android.view.LayoutInflater;
 import android.view.ViewGroup;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.ListAdapter;
@@ -50,19 +51,19 @@
                 PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_specialitiesFragment2);
             else if (position == 1)
                 PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_symptomsFragment2);
-            else if (position == 2)
+            else Toast.makeText(activity, R.string.coming_soon, Toast.LENGTH_SHORT).show();
+            /*else if (position == 2)
                 PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_lab_Home_Fragment);
             else if (position == 3)
-                PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_onlinePharmacyFragment);
+                PatientDashboard.getInstance().navigate(R.id.action_patientDashboardFragment_to_onlinePharmacyFragment);*/
 
         });
 
         holder.dashBoardViewBinding.textView55.setText(dashboardModel1.getDescription());
 
-
     }
 
-    public class DashboardModelVH extends RecyclerView.ViewHolder {
+    public static class DashboardModelVH extends RecyclerView.ViewHolder {
         DashBoardViewBinding dashBoardViewBinding;
 
         public DashboardModelVH(DashBoardViewBinding dashBoardViewBinding) {
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM__Default_Changelist_.xml	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM__Default_Changelist_.xml	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM_[Default_Changelist]" date="1613047737253" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2/11/2021 6:18 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM_[Default_Changelist]/shelved.patch	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_2_11_2021_6_18_PM_[Default_Changelist]/shelved.patch	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
@@ -1,41 +0,0 @@
-Index: app/src/main/java/com/digidoctor/android/view/fragments/Lab/Lab_Home_Fragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.digidoctor.android.view.fragments.Lab;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.adapters.labadapter.HealthPackageAdapter;\r\nimport com.digidoctor.android.adapters.labadapter.sliderimageadapter;\r\nimport com.digidoctor.android.databinding.LabTestHomeBinding;\r\nimport com.digidoctor.android.interfaces.ApiCallbackInterface;\r\nimport com.digidoctor.android.model.labmodel.LabDashBoardmodel;\r\nimport com.digidoctor.android.model.labmodel.PackageDetail;\r\nimport com.digidoctor.android.model.labmodel.SliderImage;\r\nimport com.digidoctor.android.utility.ApiUtils;\r\nimport com.digidoctor.android.utility.AppUtils;\r\nimport com.digidoctor.android.utility.utils;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Lab_Home_Fragment extends Fragment {\r\n\r\n    private static final String TAG = \"Lab_Home_Fragment\";\r\n    LabTestHomeBinding labTestHomeBinding;\r\n    sliderimageadapter sliderimageadapter;\r\n    HealthPackageAdapter healthPackageAdapter;\r\n    NavController navController;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        labTestHomeBinding = LabTestHomeBinding.inflate(getLayoutInflater());\r\n        return labTestHomeBinding.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        navController = Navigation.findNavController(view);\r\n\r\n\r\n        final List<SliderImage> sliderimageoflab = new ArrayList<>();\r\n        final List<PackageDetail> packageDetails = new ArrayList<>();\r\n\r\n\r\n        sliderimageadapter = new sliderimageadapter(sliderimageoflab, requireActivity());\r\n        healthPackageAdapter = new HealthPackageAdapter(packageDetails, requireActivity());\r\n\r\n\r\n        labTestHomeBinding.bannerSlider1.setAdapter(sliderimageadapter);\r\n        labTestHomeBinding.healthpackagerecyclerview.setAdapter(healthPackageAdapter);\r\n\r\n\r\n        if (!utils.isNetworkConnected(requireActivity())) {\r\n            Toast.makeText(requireActivity(), getString(R.string.not_connected_to_internet), Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        ApiUtils.getlabdash(requireActivity(), new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> o) {\r\n                AppUtils.hideDialog();\r\n                List<LabDashBoardmodel> models = (List<LabDashBoardmodel>) o;\r\n                List<SliderImage> sliderImages = models.get(0).getSliderImage();\r\n                sliderimageoflab.clear();\r\n\r\n                sliderimageoflab.addAll(sliderImages);\r\n                Log.d(TAG, \"onSuccess: \" + sliderimageoflab);\r\n\r\n\r\n                List<PackageDetail> packageDetails1 = models.get(0).getPackageDetailList();\r\n                packageDetails.clear();\r\n                packageDetails.addAll(packageDetails1);\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), \"\" + s, Toast.LENGTH_SHORT).show();\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), \"\" + throwable.getLocalizedMessage(), Toast.LENGTH_SHORT).show();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        labTestHomeBinding.textView158.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                navController.navigate(R.id.action_lab_Home_Fragment_to_health_Checkup_Categories_Fragment);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        ((AppCompatActivity) getActivity()).getSupportActionBar().hide();\r\n\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/digidoctor/android/view/fragments/Lab/Lab_Home_Fragment.java	(revision b4d542b91688c0eefa1b20a608be05b0f1c7e086)
-+++ app/src/main/java/com/digidoctor/android/view/fragments/Lab/Lab_Home_Fragment.java	(date 1613047729817)
-@@ -28,6 +28,7 @@
- 
- import java.util.ArrayList;
- import java.util.List;
-+import java.util.Objects;
- 
- public class Lab_Home_Fragment extends Fragment {
- 
-@@ -104,21 +105,14 @@
-         });
- 
- 
--        labTestHomeBinding.textView158.setOnClickListener(new View.OnClickListener() {
--            @Override
--            public void onClick(View view) {
--                navController.navigate(R.id.action_lab_Home_Fragment_to_health_Checkup_Categories_Fragment);
--            }
--        });
-+        labTestHomeBinding.textView158.setOnClickListener(view1 -> navController.navigate(R.id.action_lab_Home_Fragment_to_health_Checkup_Categories_Fragment));
- 
-     }
- 
-     @Override
-     public void onResume() {
-         super.onResume();
--        ((AppCompatActivity) getActivity()).getSupportActionBar().hide();
--
-+        Objects.requireNonNull(((AppCompatActivity) requireActivity()).getSupportActionBar()).hide();
-     }
--
- 
- }
Index: app/src/main/java/com/digidoctor/android/adapters/pharmacy/ProductColorAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.adapters.pharmacy;\r\n\r\nimport android.app.Activity;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.databinding.ProductcolorlayoutBinding;\r\nimport com.digidoctor.android.interfaces.ApiCallbackInterface;\r\nimport com.digidoctor.android.model.User;\r\nimport com.digidoctor.android.model.pharmacyModel.ProductDetailModelResponse;\r\nimport com.digidoctor.android.model.pharmacyModel.ProductModel;\r\nimport com.digidoctor.android.utility.ApiUtils;\r\nimport com.digidoctor.android.utility.utils;\r\nimport com.digidoctor.android.view.fragments.pharmacy.ProductDetailsFragment;\r\n\r\nimport org.json.JSONException;\r\n\r\nimport java.util.List;\r\n\r\npublic class ProductColorAdapter extends RecyclerView.Adapter<ProductColorAdapter.ViewHolderVH> {\r\n\r\n    List<ProductDetailModelResponse.ProductDetailsList.ColorDetails> getproductcolorlist;\r\n    Activity activity;\r\n    int selectedPosition = -1;\r\n\r\n\r\n    public ProductColorAdapter(List<ProductDetailModelResponse.ProductDetailsList.ColorDetails> getproductcolorlist, Activity activity) {\r\n        this.getproductcolorlist = getproductcolorlist;\r\n        this.activity = activity;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ProductColorAdapter.ViewHolderVH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        ProductcolorlayoutBinding productcolorlayoutBinding = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext()), R.layout.productcolorlayout, parent, false);\r\n        return new ProductColorAdapter.ViewHolderVH(productcolorlayoutBinding);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ProductColorAdapter.ViewHolderVH holder, int position) {\r\n        final ProductDetailModelResponse.ProductDetailsList.ColorDetails colorDetails = getproductcolorlist.get(position);\r\n        holder.productcolorlayoutBinding.cardviewColor.setText(colorDetails.getColor());\r\n        holder.productcolorlayoutBinding.cardviewColor.setText(colorDetails.getColor());\r\n\r\n        String colorcode = colorDetails.getColorCode();\r\n        holder.productcolorlayoutBinding.cardviewColor.setBackground(Drawable.createFromPath(colorcode));\r\n\r\n        if (colorDetails.getIsSelected() == 1) {\r\n            selectedPosition = position;\r\n        }\r\n\r\n      /*  if (colorDetails.getIsSelected() == 1) {\r\n            holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.flavourgreen);\r\n            holder.productcolorlayoutBinding.cardviewColor.setTextColor(Color.parseColor(\"#ffffff\"));\r\n        }\r\n*/\r\n        if (selectedPosition == position) {\r\n            holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.size_flavour_text);\r\n            holder.productcolorlayoutBinding.cardviewColor.setTextColor(Color.BLACK);\r\n        }\r\n        if (colorDetails.getIsSelected() == 0) {\r\n            holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.size_flavour_text);\r\n            holder.productcolorlayoutBinding.cardviewColor.setTextColor(Color.BLACK);\r\n\r\n        }\r\n\r\n\r\n        holder.productcolorlayoutBinding.cardviewColor.setOnClickListener(v -> {\r\n\r\n            selectedPosition = position;\r\n            ProductModel model = new ProductModel();\r\n            model.setSizeId(String.valueOf(colorDetails.getColorId()));\r\n            notifyDataSetChanged();\r\n            updateProduct(model);\r\n\r\n            holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.flavourgreen);\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void updateProduct(ProductModel model) {\r\n\r\n\r\n        User user = utils.getPrimaryUser(activity);\r\n        model.setMemberId(String.valueOf(user.getMemberId()));\r\n        model.setProductId(Integer.parseInt(ProductDetailsFragment.getInstance().productId));\r\n\r\n        try {\r\n            ApiUtils.getProductdetailsbyProductID(model, activity, new ApiCallbackInterface() {\r\n\r\n                @Override\r\n                public void onSuccess(List<?> o) {\r\n                    List<ProductDetailModelResponse.ProductDetailsList> models = (List<ProductDetailModelResponse.ProductDetailsList>) o;\r\n                    Log.d(\"TAG\", \"onSuccess: \" + models.get(0).getProductDetails());\r\n\r\n                    if (models.isEmpty())\r\n                        return;\r\n\r\n                    if(models.get(0).getProductDetails().size()>0){\r\n\r\n\r\n\r\n                    ProductDetailsFragment.getInstance().updateProduct(models);\r\n                    ProductDetailsFragment.getInstance().setProduct(models.get(0).getProductDetails().get(0));\r\n                    }\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onError(String s) {\r\n                    Toast.makeText(activity, \"\" + s, Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                @Override\r\n                public void onFailed(Throwable throwable) {\r\n                    Toast.makeText(activity, \"\" + throwable.getLocalizedMessage(), Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(activity, \"try again\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return getproductcolorlist.size();\r\n    }\r\n\r\n    public class ViewHolderVH extends RecyclerView.ViewHolder {\r\n\r\n        ProductcolorlayoutBinding productcolorlayoutBinding;\r\n\r\n        public ViewHolderVH(@NonNull ProductcolorlayoutBinding itemView) {\r\n\r\n            super(itemView.getRoot());\r\n\r\n            productcolorlayoutBinding = itemView;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/adapters/pharmacy/ProductColorAdapter.java	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ app/src/main/java/com/digidoctor/android/adapters/pharmacy/ProductColorAdapter.java	(date 1613636142043)
@@ -2,7 +2,6 @@
 
 import android.app.Activity;
 import android.graphics.Color;
-import android.graphics.drawable.Drawable;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.ViewGroup;
@@ -49,10 +48,7 @@
     public void onBindViewHolder(@NonNull ProductColorAdapter.ViewHolderVH holder, int position) {
         final ProductDetailModelResponse.ProductDetailsList.ColorDetails colorDetails = getproductcolorlist.get(position);
         holder.productcolorlayoutBinding.cardviewColor.setText(colorDetails.getColor());
-        holder.productcolorlayoutBinding.cardviewColor.setText(colorDetails.getColor());
-
-        String colorcode = colorDetails.getColorCode();
-        holder.productcolorlayoutBinding.cardviewColor.setBackground(Drawable.createFromPath(colorcode));
+        holder.productcolorlayoutBinding.cardviewColor.setBackgroundColor(Integer.parseInt(colorDetails.getColorCode()));
 
         if (colorDetails.getIsSelected() == 1) {
             selectedPosition = position;
@@ -64,8 +60,8 @@
         }
 */
         if (selectedPosition == position) {
-            holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.size_flavour_text);
-            holder.productcolorlayoutBinding.cardviewColor.setTextColor(Color.BLACK);
+       //     holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.flavourgreen);
+            holder.productcolorlayoutBinding.cardviewColor.setTextColor(Color.WHITE);
         }
         if (colorDetails.getIsSelected() == 0) {
             holder.productcolorlayoutBinding.cardviewColor.setBackgroundResource(R.drawable.size_flavour_text);
@@ -104,17 +100,18 @@
                 public void onSuccess(List<?> o) {
                     List<ProductDetailModelResponse.ProductDetailsList> models = (List<ProductDetailModelResponse.ProductDetailsList>) o;
                     Log.d("TAG", "onSuccess: " + models.get(0).getProductDetails());
+                   /* AllProductModels.addAll(models.get(0).getProductDetails());
 
+                    if (!AllProductModels.isEmpty() && models.isEmpty()) {
+                        fragmentProductDetailsBinding.setProduct(AllProductModels.get(0));
+
+                    }*/
                     if (models.isEmpty())
                         return;
 
-                    if(models.get(0).getProductDetails().size()>0){
-
-
-
                     ProductDetailsFragment.getInstance().updateProduct(models);
                     ProductDetailsFragment.getInstance().setProduct(models.get(0).getProductDetails().get(0));
-                    }
+
 
                 }
 
Index: app/src/main/java/com/digidoctor/android/model/pharmacyModel/AddAdressResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.model.pharmacyModel;\r\n\r\npublic class AddAdressResponse {\r\n\r\n private Integer responseCode;\r\n    private String responseMessage;\r\n    private  String responseValue;\r\n\r\n    public Integer getResponseCode() {\r\n        return responseCode;\r\n    }\r\n\r\n    public void setResponseCode(Integer responseCode) {\r\n        this.responseCode = responseCode;\r\n    }\r\n\r\n    public String getResponseMessage() {\r\n        return responseMessage;\r\n    }\r\n\r\n    public void setResponseMessage(String responseMessage) {\r\n        this.responseMessage = responseMessage;\r\n    }\r\n\r\n    public String getResponseValue() {\r\n        return responseValue;\r\n    }\r\n\r\n    public void setResponseValue(String responseValue) {\r\n        this.responseValue = responseValue;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/model/pharmacyModel/AddAdressResponse.java	(revision bb3be6f18409443b1cad4a19a336c76452f6dcb9)
+++ app/src/main/java/com/digidoctor/android/model/pharmacyModel/AddAdressResponse.java	(date 1613627602438)
@@ -2,9 +2,9 @@
 
 public class AddAdressResponse {
 
- private Integer responseCode;
+    private Integer responseCode;
     private String responseMessage;
-    private  String responseValue;
+    private String responseValue;
 
     public Integer getResponseCode() {
         return responseCode;
@@ -30,7 +30,4 @@
         this.responseValue = responseValue;
     }
 
-
-
-
 }
