Index: app/src/main/java/com/digidoctor/android/view/fragments/digiDoctorFragments/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.view.fragments.digiDoctorFragments;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.DatePicker;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.databinding.FragmentProfileBinding;\r\nimport com.digidoctor.android.databinding.GenderViewBinding;\r\nimport com.digidoctor.android.interfaces.ApiCallbackInterface;\r\nimport com.digidoctor.android.interfaces.MyDialogInterface;\r\nimport com.digidoctor.android.model.Registration;\r\nimport com.digidoctor.android.model.User;\r\nimport com.digidoctor.android.utility.ApiUtils;\r\nimport com.digidoctor.android.utility.AppUtils;\r\nimport com.digidoctor.android.utility.FileUtil;\r\nimport com.digidoctor.android.utility.utils;\r\nimport com.digidoctor.android.view.activity.PatientDashboard;\r\nimport com.github.dhaval2404.imagepicker.ImagePicker;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport static com.digidoctor.android.utility.ApiUtils.patientRegistration;\r\nimport static com.digidoctor.android.utility.AppUtils.isEmailValid;\r\nimport static com.digidoctor.android.utility.utils.BOOKING_USER;\r\nimport static com.digidoctor.android.utility.utils.MOBILE_NUMBER;\r\nimport static com.digidoctor.android.utility.utils.TOKEN;\r\nimport static com.digidoctor.android.utility.utils.USER;\r\nimport static com.digidoctor.android.utility.utils.USER_MAIN;\r\nimport static com.digidoctor.android.utility.utils.getPrimaryUser;\r\nimport static com.digidoctor.android.utility.utils.hideSoftKeyboard;\r\nimport static com.digidoctor.android.utility.utils.logout;\r\n\r\n\r\npublic class ProfileFragment extends Fragment implements MyDialogInterface {\r\n\r\n\r\n    FragmentProfileBinding profileBinding;\r\n    String name, email, dob, address, gender, mobile;\r\n\r\n    User user;\r\n    String GENDER = null;\r\n    AlertDialog optionDialog;\r\n\r\n\r\n    Registration registration = new Registration();\r\n    private static final String TAG = \"ProfileFragment\";\r\n\r\n    String memberId = null;\r\n\r\n    boolean isPicChange = false;\r\n\r\n    String imagePath = null;\r\n\r\n    @Override\r\n    public View onCreateView(@NotNull LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        profileBinding = FragmentProfileBinding.inflate(inflater, container, false);\r\n        profileBinding.setDialogInterface(this);\r\n        return profileBinding.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        Objects.requireNonNull(((AppCompatActivity) requireActivity()).getSupportActionBar()).show();\r\n        user = getPrimaryUser(requireActivity());\r\n\r\n        memberId = String.valueOf(user.getMemberId());\r\n\r\n        Log.d(TAG, \"memberIdReceived: \" + memberId);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        user = getPrimaryUser(requireActivity());\r\n        Log.d(TAG, \"onViewCreatedUser: \" + user.getPrimaryStatus());\r\n\r\n        updateVisibility(user);\r\n\r\n        if (user.getIsExists() == 1) {\r\n\r\n            profileBinding.setUser(user);\r\n            if (null != user && null != user.getPrimaryStatus())\r\n                profileBinding.editTextTextPersonNumber.setEnabled(user.getPrimaryStatus() != 1);\r\n\r\n        }\r\n\r\n        profileBinding.setMobile(utils.getString(utils.MOBILE_NUMBER, requireActivity()));\r\n\r\n        profileBinding.btnUpdateProfile.setOnClickListener(view12 -> {\r\n            if (user.getIsExists() == 0) {\r\n                if (isAllFieldFilled()) {\r\n                    registerUser();\r\n                }\r\n\r\n            } else {\r\n                if (checkFieldsForUpdateProfile()) {\r\n                    updateProfile();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        profileBinding.textView5.setOnClickListener(view1 -> ImagePicker.Companion.with(this)\r\n                .crop(4f, 4f)                    //Crop image(Optional), Check Customization for more option\r\n                .compress(512)            //Final image size will be less than 1 MB(Optional)\r\n                .maxResultSize(1080, 1080)    //Final image resolution will be less than 1080 x 1080(Optional)\r\n                .start());\r\n\r\n\r\n    }\r\n\r\n    private boolean checkFieldsForUpdateProfile() {\r\n\r\n        name = profileBinding.editTextTextPersonName.getText().toString().trim();\r\n        email = profileBinding.editTextTextPersonEmail.getText().toString().trim();\r\n        dob = AppUtils.parseUserDate(profileBinding.editTextTextPersonDob.getText().toString().trim());\r\n        gender = profileBinding.editTextTextPersonGender.getText().toString().trim();\r\n        address = profileBinding.editTextTextPersonAddress.getText().toString().trim();\r\n        mobile = profileBinding.editTextTextPersonNumber.getText().toString().trim();\r\n\r\n        if (TextUtils.isEmpty(name)) {\r\n            Toast.makeText(requireActivity(), R.string.name_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(email)) {\r\n            Toast.makeText(requireActivity(), R.string.email_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (!isEmailValid(email.trim())) {\r\n            Toast.makeText(requireActivity(), R.string.enter_valid_email_id, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(mobile)) {\r\n            Toast.makeText(requireActivity(), R.string.mobile_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (mobile.length() < 10) {\r\n            Toast.makeText(requireActivity(), R.string.enter_valid_mobile_number, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(address)) {\r\n            Toast.makeText(requireActivity(), R.string.address_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == Activity.RESULT_OK) {\r\n            if (null != data) {\r\n                try {\r\n                    Uri uri = data.getData();\r\n                    profileBinding.profileImage.setImageURI(uri);\r\n                    isPicChange = true;\r\n                    File file = FileUtil.from(requireActivity(), uri);\r\n                    uploadImage(file);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void uploadImage(File imagFile) throws IOException {\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        ApiUtils.uploadProfileImage(imagFile, new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> o) {\r\n                AppUtils.hideDialog();\r\n                List<String> Path = (List<String>) o;\r\n                Log.d(TAG, \"ImagePath: \" + Path.get(0));\r\n                imagePath = Path.get(0);\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), s, Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), throwable.getLocalizedMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateVisibility(User user) {\r\n        profileBinding.ivDobDialog.setVisibility(user.getIsExists() == 0 ? View.VISIBLE : View.GONE);\r\n        profileBinding.ivGenderDialog.setVisibility(user.getIsExists() == 0 ? View.VISIBLE : View.GONE);\r\n    }\r\n\r\n    private void updateProfile() {\r\n\r\n        User updatedUser = new User();\r\n        updatedUser.setMemberId(user.getId());\r\n        updatedUser.setName(profileBinding.editTextTextPersonName.getText().toString());\r\n        updatedUser.setMobileNo(profileBinding.editTextTextPersonNumber.getText().toString());\r\n        updatedUser.setEmailId(profileBinding.editTextTextPersonEmail.getText().toString());\r\n        updatedUser.setGender(profileBinding.editTextTextPersonGender.getText().toString().equalsIgnoreCase(\"male\") ? 1 : 2);\r\n        updatedUser.setDob(AppUtils.parseUserDate(profileBinding.editTextTextPersonDob.getText().toString()));\r\n        updatedUser.setAddress(profileBinding.editTextTextPersonAddress.getText().toString());\r\n\r\n        updatedUser.setProfilePhotoPath(imagePath);\r\n\r\n\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        ApiUtils.updateMember(updatedUser, new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> o) {\r\n\r\n                List<User> updatedUsers = (List<User>) o;\r\n                for (User user : updatedUsers) {\r\n\r\n                    Log.d(TAG, \"memberIdReceived: \" + memberId);\r\n                    if (user.getMemberId() == Integer.parseInt(memberId)) {\r\n                        utils.savePrimaryUserData(USER, requireActivity(), user);\r\n\r\n                        utils.setUserForBooking(BOOKING_USER, requireActivity(), user);\r\n\r\n                        utils.setString(MOBILE_NUMBER, user.getMobileNo(), requireActivity());\r\n\r\n                        PatientDashboard.getInstance().updateUser();\r\n                    }\r\n                    if (user.getPrimaryStatus() == 1) {\r\n                        utils.saveMainUserData(USER_MAIN, requireActivity(), user);\r\n                    }\r\n                }\r\n                Toast.makeText(requireActivity(), \"Updated Successfully\", Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n                PatientDashboard.getInstance().updateUser();\r\n                PatientDashboard.getInstance().onSupportNavigateUp();\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                Toast.makeText(requireActivity(), getString(R.string.retry), Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                Toast.makeText(requireActivity(), getString(R.string.retry), Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void registerUser() {\r\n\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        registration.setProfilePhotoPath(imagePath);\r\n        patientRegistration(registration, requireActivity(), new ApiCallbackInterface() {\r\n            @Override\r\n            public void onSuccess(List<?> obj) {\r\n                hideSoftKeyboard(requireActivity());\r\n                Toast.makeText(requireActivity(), R.string.profile_saved, Toast.LENGTH_SHORT).show();\r\n                AppUtils.hideDialog();\r\n                try {\r\n                    List<User> users = (List<User>) obj;\r\n\r\n                    user = users.get(0);\r\n\r\n                    profileBinding.setUser(user);\r\n\r\n\r\n                    PatientDashboard.getInstance().setUser(user);\r\n\r\n                    //setting primary user info\r\n                    utils.savePrimaryUserData(USER, requireActivity(), user);\r\n\r\n                    //setting user info for Booking Appointment\r\n                    utils.setUserForBooking(BOOKING_USER, requireActivity(), user);\r\n\r\n                    utils.setString(MOBILE_NUMBER, mobile, requireActivity());\r\n\r\n                    PatientDashboard.getInstance().updateUser();\r\n                    PatientDashboard.getInstance().onSupportNavigateUp();\r\n\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                    Log.d(TAG, \"onFailure: \" + e.getLocalizedMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onError(String s) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), R.string.retry, Toast.LENGTH_SHORT).show();\r\n                try {\r\n                    if (s.equalsIgnoreCase(\"Failed to authenticate token !!\")) {\r\n                        logout(PatientDashboard.getInstance(), true);\r\n                        Toast.makeText(PatientDashboard.getInstance(), s, Toast.LENGTH_SHORT).show();\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailed(Throwable throwable) {\r\n                AppUtils.hideDialog();\r\n                Toast.makeText(requireActivity(), R.string.retry, Toast.LENGTH_SHORT).show();\r\n                Log.d(TAG, \"onFailed: \" + throwable.getLocalizedMessage());\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean isAllFieldFilled() {\r\n\r\n        name = profileBinding.editTextTextPersonName.getText().toString().trim();\r\n        email = profileBinding.editTextTextPersonEmail.getText().toString().trim();\r\n        dob = AppUtils.parseUserDate(profileBinding.editTextTextPersonDob.getText().toString().trim());\r\n        gender = profileBinding.editTextTextPersonGender.getText().toString().trim();\r\n        address = profileBinding.editTextTextPersonAddress.getText().toString().trim();\r\n        mobile = profileBinding.editTextTextPersonNumber.getText().toString().trim();\r\n\r\n        if (TextUtils.isEmpty(name)) {\r\n            Toast.makeText(requireActivity(), R.string.name_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(email)) {\r\n            Toast.makeText(requireActivity(), R.string.email_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (!isEmailValid(email.trim())) {\r\n            Toast.makeText(requireActivity(), R.string.enter_valid_email_id, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(dob)) {\r\n            Toast.makeText(requireActivity(), R.string.date_of_birth_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (null == GENDER) {\r\n            Toast.makeText(requireActivity(), R.string.select_gender, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(address)) {\r\n            Toast.makeText(requireActivity(), R.string.address_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else if (TextUtils.isEmpty(mobile)) {\r\n            Toast.makeText(requireActivity(), R.string.mobilel_required, Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        } else {\r\n            registration.setName(name);\r\n            registration.setEmailId(email);\r\n            registration.setDob(dob);\r\n            registration.setGender(Long.parseLong(GENDER));\r\n            registration.setAddress(address);\r\n            registration.setMobileNo(mobile);\r\n            registration.setDeviceToken(utils.getString(TOKEN, requireActivity()));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onGenderItemClick() {\r\n        showSelectGenderDialog();\r\n    }\r\n\r\n    private void showSelectGenderDialog() {\r\n        LayoutInflater inflater = (LayoutInflater) requireActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        final View formElementsView = inflater.inflate(R.layout.gender_view, null, false);\r\n\r\n        GenderViewBinding genderViewBinding = GenderViewBinding.bind(formElementsView);\r\n\r\n\r\n        genderViewBinding.llMale.setOnClickListener(view -> {\r\n            GENDER = \"1\";\r\n            profileBinding.editTextTextPersonGender.setText(R.string.male);\r\n            optionDialog.dismiss();\r\n        });\r\n\r\n        genderViewBinding.llFemale.setOnClickListener(view -> {\r\n            GENDER = \"2\";\r\n            profileBinding.editTextTextPersonGender.setText(R.string.female);\r\n            optionDialog.dismiss();\r\n\r\n        });\r\n\r\n        // the alert dialog\r\n        optionDialog = new AlertDialog.Builder(requireActivity()).create();\r\n        optionDialog.setView(formElementsView);\r\n        optionDialog.show();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onAgeItemClick() {\r\n        showSelectAgeDialog();\r\n    }\r\n\r\n    private void showSelectAgeDialog() {\r\n        LayoutInflater inflater = (LayoutInflater) requireActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        View view = inflater.inflate(R.layout.date_picker, null, false);\r\n        final DatePicker myDatePicker = (DatePicker) view.findViewById(R.id.myDatePicker);\r\n\r\n        myDatePicker.setCalendarViewShown(false);\r\n        myDatePicker.setMaxDate(System.currentTimeMillis());\r\n        new AlertDialog.Builder(requireActivity()).setView(view)\r\n                .setTitle(R.string.set_date)\r\n                .setPositiveButton(R.string.ok, (dialog, id) -> {\r\n                    int month = myDatePicker.getMonth() + 1;\r\n                    int day = myDatePicker.getDayOfMonth();\r\n                    int year = myDatePicker.getYear();\r\n                    profileBinding.editTextTextPersonDob.setText(day + \"/\" + month + \"/\" + year);\r\n                    dialog.cancel();\r\n                }).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/view/fragments/digiDoctorFragments/ProfileFragment.java	(revision 2b0277b33c3eae61662d8b67f661aea288d830b8)
+++ app/src/main/java/com/digidoctor/android/view/fragments/digiDoctorFragments/ProfileFragment.java	(date 1617177332192)
@@ -186,7 +186,7 @@
 
     }
 
-    private void uploadImage(File imagFile) throws IOException {
+    private void uploadImage(File imagFile)  {
         AppUtils.showRequestDialog(requireActivity());
         ApiUtils.uploadProfileImage(imagFile, new ApiCallbackInterface() {
             @Override
Index: app/src/main/java/com/digidoctor/android/utility/Cart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.utility;\r\n\r\nimport android.app.Activity;\r\nimport android.util.Log;\r\n\r\nimport com.digidoctor.android.interfaces.CartInterface;\r\nimport com.digidoctor.android.model.labmodel.CartModel;\r\n\r\npublic class Cart {\r\n    private static final String TAG = \"Cart\";\r\n\r\n    Activity activity;\r\n    CartInterface cartInterface;\r\n\r\n    public Cart(Activity activity, CartInterface cartInterface) {\r\n        this.activity = activity;\r\n        this.cartInterface = cartInterface;\r\n    }\r\n\r\n    public Cart() {\r\n    }\r\n\r\n    public void addItemToCart(String testId, String packageId) {\r\n        CartModel cartModel = new CartModel();\r\n        cartModel.setMemberId(utils.getPrimaryUser(activity).getMemberId());\r\n        cartModel.setTestId(testId);\r\n        cartModel.setPackageId(packageId);\r\n\r\n        if (null == utils.getPrimaryUser(activity).getMemberId())\r\n            cartModel.setUniqueNo(utils.getPrimaryUser(activity).getUniqueNo());\r\n\r\n        Log.d(TAG, \"addItemToCart: \" + cartModel);\r\n        AppUtils.showRequestDialog(activity);\r\n        ApiUtils.addItemToCart(cartModel, cartInterface);\r\n    }\r\n\r\n    public void deleteItemFromCart(String cartId) {\r\n        CartModel cartModel = new CartModel();\r\n        cartModel.setCartId(cartId);\r\n        ApiUtils.deleteFromCart(cartModel, cartInterface);\r\n    }\r\n\r\n    public void deleteAllItemFromCart() {\r\n    }\r\n\r\n    public void getCart() {\r\n        ApiUtils.getCartData(activity, cartInterface);\r\n    }\r\n\r\n\r\n    public void onCartItemClicked(Object obj) {\r\n        cartInterface.cartItem(obj);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/utility/Cart.java	(revision 2b0277b33c3eae61662d8b67f661aea288d830b8)
+++ app/src/main/java/com/digidoctor/android/utility/Cart.java	(date 1617193835998)
@@ -17,19 +17,17 @@
         this.cartInterface = cartInterface;
     }
 
-    public Cart() {
-    }
 
     public void addItemToCart(String testId, String packageId) {
         CartModel cartModel = new CartModel();
         cartModel.setMemberId(utils.getPrimaryUser(activity).getMemberId());
         cartModel.setTestId(testId);
         cartModel.setPackageId(packageId);
+        Log.d(TAG, "addItemToCart: " + cartModel);
 
         if (null == utils.getPrimaryUser(activity).getMemberId())
             cartModel.setUniqueNo(utils.getPrimaryUser(activity).getUniqueNo());
 
-        Log.d(TAG, "addItemToCart: " + cartModel);
         AppUtils.showRequestDialog(activity);
         ApiUtils.addItemToCart(cartModel, cartInterface);
     }
Index: app/src/main/java/com/digidoctor/android/view/fragments/Lab/Test_Package_Fragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.digidoctor.android.view.fragments.Lab;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport com.digidoctor.android.R;\r\nimport com.digidoctor.android.adapters.labadapter.HealthPackageListAdapter;\r\nimport com.digidoctor.android.databinding.TestPackagesFragmentBinding;\r\nimport com.digidoctor.android.interfaces.CartInterface;\r\nimport com.digidoctor.android.utility.AppUtils;\r\nimport com.digidoctor.android.utility.Cart;\r\nimport com.digidoctor.android.viewHolder.LabViewModel;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class Test_Package_Fragment extends Fragment implements CartInterface {\r\n    NavController navController;\r\n\r\n    TestPackagesFragmentBinding testPackagesFragmentBinding;\r\n    HealthPackageListAdapter adapter;\r\n    LabViewModel labViewModel;\r\n\r\n    Cart cart;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        testPackagesFragmentBinding = TestPackagesFragmentBinding.inflate(getLayoutInflater());\r\n        return testPackagesFragmentBinding.getRoot();\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        navController = Navigation.findNavController(view);\r\n\r\n\r\n        //init LabViewModel\r\n        labViewModel = new ViewModelProvider(this).get(LabViewModel.class);\r\n\r\n\r\n        //int cart Class\r\n        cart = new Cart(requireActivity(), this);\r\n        //init Adapter\r\n        adapter = new HealthPackageListAdapter(cart);\r\n\r\n\r\n        //init RecyclerView\r\n        testPackagesFragmentBinding.testrecyclerview.setAdapter(adapter);\r\n\r\n\r\n        getPackageData();\r\n    }\r\n\r\n    private void getPackageData() {\r\n        AppUtils.showRequestDialog(requireActivity());\r\n        labViewModel.packageLiveData().observe(getViewLifecycleOwner(), packageDetails -> {\r\n            if (packageDetails.isEmpty()) {\r\n                Toast.makeText(requireActivity(), \"Packages not found !!\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                adapter.submitList(packageDetails);\r\n            }\r\n\r\n            AppUtils.hideDialog();\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        Objects.requireNonNull(((AppCompatActivity) requireActivity()).getSupportActionBar()).show();\r\n    }\r\n\r\n    @Override\r\n    public void onFailed(String msg) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCartItemAdded(Object obj) {\r\n        Toast.makeText(requireActivity(), getString(R.string.added_successfully), Toast.LENGTH_SHORT).show();\r\n        getPackageData();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCartItemDeleted(Object obj) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void cartItem(Object obj) {\r\n        navController.navigate(R.id.action_test_Package_Fragment_to_fragmentCartListLab);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/digidoctor/android/view/fragments/Lab/Test_Package_Fragment.java	(revision 2b0277b33c3eae61662d8b67f661aea288d830b8)
+++ app/src/main/java/com/digidoctor/android/view/fragments/Lab/Test_Package_Fragment.java	(date 1617193835993)
@@ -1,3 +1,4 @@
+
 package com.digidoctor.android.view.fragments.Lab;
 
 import android.os.Bundle;
@@ -30,9 +31,9 @@
     TestPackagesFragmentBinding testPackagesFragmentBinding;
     HealthPackageListAdapter adapter;
     LabViewModel labViewModel;
-
     Cart cart;
 
+
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
@@ -52,6 +53,7 @@
 
         //int cart Class
         cart = new Cart(requireActivity(), this);
+
         //init Adapter
         adapter = new HealthPackageListAdapter(cart);
 
@@ -59,7 +61,6 @@
         //init RecyclerView
         testPackagesFragmentBinding.testrecyclerview.setAdapter(adapter);
 
-
         getPackageData();
     }
 
